{
  "swagger": "2.0",
  "title": "Rk_Music API Documentation",
  "description": "MUSIC API",
  "license": {
    "name": "MIT",
    "url": "https://opensource.org/licenses/MIT"
  },
  "version": "1.0.0",
  "host": "localhost:8000",
  "basePath": "/api",
  "tags": [{
      "name": "Songs",
      "description": "API for Songs Endpoints"
    },
    {
      "name": "Users",
      "description": "API for Users Endpoints"
    },
    {
      "name": "Playlists",
      "description": "Api for Playlist Endpoints"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/users/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "Api Endpoint for create new User",
        "description": "Create new User in database",
        "parameters": [{
          "name": "user",
          "description": "User prams to create new song",
          "in": "body",
          "required": "true",
          "schema": {
            "$ref": "#definitions/User"
          }
        }],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "new User created/Added",
            "schema": {
              "$ref": "#definitions/SignupRes"
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Api Endpoint for Signin to user Account",
        "description": "Signin using valid password and email",
        "parameters": [{
          "name": "user",
          "description": "User prams to login",
          "in": "body",
          "required": "true",
          "schema": {
            "$ref": "#definitions/UserLogin"
          }
        }],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User Login",
            "schema": {
              "$ref": "#definitions/loginRes"
            }
          }
        }
      }
    },
    "/playlist": {
      "post": {
        "tags": ["PlayLists"],
        "summary": "Api Endpoint for create playlist",
        "description": "Add new songs in the PlayList",
        "parameters": [{
            "name": "playlist",
            "description": "Songs that user want to add in the PlayList",
            "in": "body",
            "required": "true",
            "schema": {
              "$ref": "#definitions/PlayList"
            }
          },
          {
            "name": "authorization",
            "description": "Access token to authorization of user",
            "in": "header",
            "type": "string",
            "required": "true"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "new PlayList is created",
            "schema": {
              "$ref": "#definitions/Playlist"
            }
          }
        }
      },
      "get": {
        "tags": ["PlayLists"],
        "summary": "Find all the PlayList with Songs",
        "description": "View all the Songs in the PlayList",
        "parameters": [
          {
            "name": "authorization",
            "description": "Access token to authorization of user",
            "in": "header",
            "type": "string",
            "required": "true"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "View all the PlayList",
            "schema": {
              "$ref": "#definitions/PlayLists"
            }
          }
        }
      }
    },

    "/songs": {
      "post": {
        "tags": ["Songs"],
        "summary": "Api Endpoint for create Song",
        "description": "Create new Song in database",
        "parameters": [{
            "name": "song",
            "description": "Song prams to create new song",
            "in": "body",
            "required": "true",
            "schema": {
              "$ref": "#definitions/Song"
            }
          },
          {
            "name": "authorization",
            "description": "Access token to authorization of user",
            "in": "header",
            "type": "string",
            "required": "true"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "new song created",
            "schema": {
              "$ref": "#definitions/Song"
            }
          }
        }
      },
      "get": {
        "tags": ["Songs"],
        "summary": "Api Endpoint for ALL Songs",
        "description": "Fetching all Song from database",
        "parameters": [{
            "name": "page",
            "type": "integer",
            "description": "Define Page index for the record",
            "in": "query"
          },
          {
            "name": "perPage",
            "type": "integer",
            "description": "Define limit for the records e.g 10",
            "in": "query"
          },
          {
            "name": "authorization",
            "description": "Access token to authorization of user",
            "in": "header",
            "type": "string",
            "required": "true"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "ALl the songs",
            "schema": {
              "$ref": "#definitions/Songs"
            }
          }
        }
      }
    },
    "/songs/{id}": {
      "parameters": [{
          "name": "id",
          "in": "path",
          "required": "true",
          "description": "id of song",
          "type": "string"
        },
        {
          "name": "authorization",
          "description": "Access token to authorization of user",
          "in": "header",
          "type": "string",
          "required": "true"
        }
      ],
      "get": {
        "tags": ["Songs"],
        "summary": "Api Endpoint for find single Songs",
        "description": "Fetching one Song from database",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Song is found",
            "schema": {
              "$ref": "#definitions/Song"
            }
          }
        }
      },
      "delete": {
        "tags": ["Songs"],
        "summary": "Api Endpoint for delete single Songs",
        "description": "Fetching one Song and delteing from database",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Song is Deleted",
            "schema": {
              "$ref": "#definitions/Song"
            }
          }
        }
      },
      "put": {
        "tags": ["Songs"],
        "summary": "Api Endpoint for updating existing Song",
        "description": "Update existing Song in database",
        "parameters": [{
          "name": "song",
          "description": "Song prams to update existing song",
          "in": "body",
          "schema": {
            "$ref": "#definitions/UpdateSong"
          }
        }],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Song is Updated",
            "schema": {
              "$ref": "#definitions/Song"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": ["firstName", "lastName", "email", "password"],
      "properties": {
        "id": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "type": "number"
        }
      }
    },
    "UserLogin": {
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "loginRes": {
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "SignupRes": {
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "Song": {
      "required": ["title", "url"],
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "rating": {
          "type": "integer",
          "format": "Int32"
        }
      }
    },
    "UpdateSong": {
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "rating": {
          "type": "integer",
          "format": "Int32"
        }
      }
    },
    "Songs": {
      "properties": {
        "docs": {
          "type": "array",
          "items": {
            "$ref": "#definitions/Song"
          }
        },
        "total": {
          "type": "integer"
        },
        "pages": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "page": {
          "type": "integer"
        }
      }
    },
    "PlayList": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "uniqueItems": "string"
        },
        "name": {
          "type": "string"
        },
        "songs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }

      }
    },
    "PlayListRes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "uniqueItems": true
        },
        "name": {
          "type": "string"
        },
        "songs": {
          "type": "array",
          "items": {
            "$ref": "#definitions/Song"
          }
        },
        "user": {
          "$ref": "#definitions/userCustomRes"
        }
      }
    },
    "userCustomRes": {
      "properties": {
        "fisrtName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      }
    },
    "PlayLists": {
      "type": "array",
      "items": {
        "$ref": "#definitions/PlayListRes"
      }
    }
  }
}
